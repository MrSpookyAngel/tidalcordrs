name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Set universal arch and set CMAKE version minimum (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          echo "CMAKE_OSX_ARCHITECTURES=x86_64;arm64" >> $GITHUB_ENV
          echo "CMAKE_POLICY_VERSION_MINIMUM=3.5" >> $GITHUB_ENV

      - name: Build release
        run: cargo build --release

      - name: Package artifacts
        run: |
          mkdir artifacts

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            osname="windows"
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            osname="macos"
          else
            osname="linux"
          fi

          if [ "$osname" = "windows" ]; then
            for f in target/release/*.exe; do
              cp "$f" "artifacts/tidalcordrs-$osname.exe"
            done
          else
            for f in target/release/*; do
              if [ -f "$f" ] && [ -x "$f" ]; then
                cp "$f" "artifacts/tidalcordrs-$osname"
              fi
            done
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: artifacts/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/* 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
